{"version":3,"file":"index.umd.min.js","sources":["../src/store/vuex-i18n-mutations.ts","../src/store/vuex-i18n-module.ts","../src/store/vuex-i18n-state.ts","../src/store/vuex-i18n-actions.ts","../src/vuex-i18n-plugin.ts","../src/store/vuex-i18n-plurals.ts","../src/index.ts"],"sourcesContent":["import Vue from 'vue';\nimport { MutationTree } from 'vuex';\nimport { ModuleState } from './vuex-i18n-state';\n\nconst mutations: MutationTree<ModuleState> = {\n\n  RESET(state: ModuleState, payload: { locale: string } = { locale: 'all' }) {\n    if (payload.locale !== 'all') {\n      Vue.delete(state.translations, payload.locale);\n    }\n\n    Vue.set(state, 'translations', {});\n  },\n\n  // set the current locale\n  SET_LOCALE(state: ModuleState, payload: { locale: string }) {\n    state.locale = payload.locale;\n  },\n\n  // add a new locale\n  ADD_LOCALE(state: ModuleState, payload: { locale: string, translations: object }) {\n    // reduce the given translations to a single-depth tree\n    const translations = flattenTranslations(payload.translations);\n\n    if (state.translations.hasOwnProperty(payload.locale)) {\n      // get the existing translations\n      const existingTranslations = state.translations[payload.locale];\n      // merge the translations\n      Vue.set(state.translations, payload.locale,\n        Object.assign({}, existingTranslations, translations));\n    } else {\n      // just set the locale if it does not yet exist\n      Vue.set(state.translations, payload.locale, translations);\n    }\n  },\n\n  // replace existing locale information with new translations\n  REPLACE_LOCALE(state: ModuleState, payload: { locale: string, translations: object }) {\n    // reduce the given translations to a single-depth tree\n    const translations = flattenTranslations(payload.translations);\n\n    // replace the translations entirely\n    Vue.set(state.translations, payload.locale, translations);\n  },\n\n  // remove a locale from the store\n  REMOVE_LOCALE(state: ModuleState, payload: { locale: string }) {\n    // check if the given locale is present in the state\n    if (state.translations.hasOwnProperty(payload.locale)) {\n      // check if the current locale is the given locale to remvoe\n      if (state.locale === payload.locale) {\n        // reset the current locale\n        state.locale = null;\n      }\n\n      // create a copy of the translations object\n      const translationCopy: { [index: string]: any } = Object.assign({}, state.translations);\n\n      // remove the given locale\n      delete translationCopy[payload.locale];\n\n      // set the state to the new object\n      state.translations = translationCopy;\n    }\n  },\n\n  SET_FALLBACK_LOCALE(state: ModuleState, payload: { locale: string }) {\n    state.fallback = payload.locale;\n  },\n};\n\n\n// flattenTranslations will convert object trees for translations into a\n// single-depth object tree\nconst flattenTranslations = function flattenTranslations(translations: { [index: string]: any }) {\n  const toReturn: { [index: string]: any } = {};\n\n  for (const i in translations) {\n    // check if the property is present\n    if (!translations.hasOwnProperty(i)) {\n      continue;\n    }\n\n    // get the type of the property\n    const objType = typeof translations[i];\n\n    // allow unflattened array of strings\n    if (isArray(translations[i])) {\n      const count = translations[i].length;\n\n      for (let index = 0; index < count; index++) {\n        const itemType = typeof translations[i][index];\n\n        if (itemType !== 'string') {\n          console.warn('i18n:', 'currently only arrays of strings are fully supported', translations[i]);\n          break;\n        }\n      }\n\n      toReturn[i] = translations[i];\n    } else if (objType === 'object' && objType !== null) {\n      const flatObject = flattenTranslations(translations[i]);\n\n      for (const x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n\n        toReturn[`${i}.${x}`] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = translations[i];\n    }\n  }\n  return toReturn;\n};\n\n// check if the given object is an array\nfunction isArray(obj: any) {\n  return !!obj && Array === obj.constructor;\n}\n\n\nexport default mutations;\n","// vuex-i18n-store defines a custom i18n module to be used in the vuex store.\n// The respective state, actions and commits can be accessed just like any\n// other vuex module.\n\n// import vuex-module typescript definitions\nimport { Module } from 'vuex';\n\n// import the state definitions\nimport { ModuleState, RootState, init } from './vuex-i18n-state';\n\n// import actions and mutations\nimport actions from './vuex-i18n-actions';\nimport mutations from './vuex-i18n-mutations';\n\n// define a vuex module to handle locale translations\nconst i18nVuexModule: Module<ModuleState, RootState> = {\n  // the module should be namespaced (to avoid collisions)\n  namespaced: true,\n  state: init(),\n  mutations,\n  actions,\n};\n\nexport default i18nVuexModule;\n","// define an empty interface for the root state\n// as there is no root state that we can rely on\nexport interface RootState { }\n\n// define the state for the i18nModule\nexport interface ModuleState {\n  locale: string | null;\n  fallback: string | null;\n  translations: { [index: string]: any };\n}\n\nexport const init = function init() {\n  return {\n    locale: null,\n    fallback: null,\n    translations: {},\n  };\n};\n","\nimport { ActionTree } from 'vuex';\nimport { ModuleState, RootState } from './vuex-i18n-state';\n\n// define the context to be used for actions\ninterface context {\n  // commit actions always need to provide a type and\n  // a locale and optionally some translations\n  commit(payload: {\n    type: string,\n    locale: string,\n    translations?: object\n  }): any;\n}\n\nconst actions: ActionTree<ModuleState, RootState> = {\n\n  // reset the module (used for testing)\n  reset(ctx: context, payload: { locale: string } = { locale: 'all' }) {\n    ctx.commit({\n      type: 'RESET',\n      locale: payload.locale,\n    });\n  },\n\n  // set the current locale\n  setLocale(ctx: context, payload: { locale: string }) {\n    ctx.commit({\n      type: 'SET_LOCALE',\n      locale: payload.locale,\n    });\n  },\n\n  // add or extend a locale with translations\n  addLocale(ctx: context, payload: { locale: string, translations: object }) {\n    ctx.commit({\n      type: 'ADD_LOCALE',\n      locale: payload.locale,\n      translations: payload.translations,\n    });\n  },\n\n  // replace locale information\n  replaceLocale(ctx: context, payload: { locale: string, translations: object }) {\n    ctx.commit({\n      type: 'REPLACE_LOCALE',\n      locale: payload.locale,\n      translations: payload.translations,\n    });\n  },\n\n  // remove the given locale translations\n  removeLocale(ctx: context, payload: { locale: string, translations: object }) {\n    ctx.commit({\n      type: 'REMOVE_LOCALE',\n      locale: payload.locale,\n      translations: payload.translations,\n    });\n  },\n\n  setFallbackLocale(ctx: context, payload: { locale: string }) {\n    ctx.commit({\n      type: 'SET_FALLBACK_LOCALE',\n      locale: payload.locale,\n    });\n  },\n\n};\n\nexport default actions;\n","/* vuex-i18n defines the Vuexi18nPlugin to enable localization using a vuex\n** module to store the translation information */\n\n// import typescript definition for vue-plugins\nimport _Vue, { PluginObject } from 'vue';\n\n// import method interfaces for i18n and $i18n (on components)\nimport * as types from './vuex-i18n-plugin-types';\n\n// import the vuex module for vuex-i18n\nimport vuexI18nModule from './store/vuex-i18n-module';\n\n// import function to find the required pluralization form\n// given an number of items in a given language\nimport plurals from './store/vuex-i18n-plurals';\n\n// add typescript definitions to extend the vue-instance and the global\n// vue object with an i18n object\ndeclare module 'vue/types/vue' {\n\n  // declare additional properties avaiable in components\n  interface Vue {\n    $i18n: types.i18nMethods;\n    $t: types.translateFn;\n    $tlang: types.translateInFn;\n  }\n\n  // declare additional properties available in the\n  // global vue instance\n  interface VueConstructor {\n    i18n: types.i18nMethods\n  }\n}\n\n\n// define the options for the vuex-i18n plugin\ninterface vuexI18nOptions {\n  store: any; // pointer to the main store\n  warnings: boolean; // should warnings be emmited\n  moduleName: string; // name of the vuex module\n  identifiers: string[]; // identifiers to user for interpolation\n  preserveState: boolean; // should the state be preserved (for server side rendering)\n  translateFilterName: string; // custom name of the filter for the translate function\n  translateInFilterName: string; // custom name of the filter for the translateIn function\n\n  // custom function if no translation was found\n  onTranslationNotFound: types.onTranslationNotFoundFn;\n}\n\n// initialize the plugin object\nconst VuexI18nPlugin: PluginObject<vuexI18nOptions> = {\n  install: function install(Vue: typeof _Vue, options?: vuexI18nOptions) {\n    if (!options) {\n      console.error('vuex-i18n: store must now passed in options');\n      return;\n    }\n\n    // merge default options with user supplied options\n    const config: vuexI18nOptions = Object.assign({\n      warnings: true,\n      moduleName: 'i18n',\n      identifiers: ['{', '}'],\n      preserveState: false,\n      translateFilterName: 'translate',\n      translateInFilterName: 'translateIn',\n      onTranslationNotFound() { },\n    }, options);\n\n    // define module name and identifiers as constants to prevent any changes\n    const { moduleName } = config;\n    const { identifiers } = config;\n    const { translateFilterName } = config;\n    const { translateInFilterName } = config;\n\n    // add a shorthand to access the store\n    const { store } = options;\n\n    // initialize the onTranslationNotFound function and make sure it is actually\n    // a function\n    if (typeof config.onTranslationNotFound !== 'function') {\n      console.error('vuex-i18n: i18n config option onTranslationNotFound must be a function');\n      config.onTranslationNotFound = function onTranslationNotFound() { };\n    }\n\n    // register the i18n module in the vuex store\n    // preserveState can be used via configuration if server side rendering is used\n    store.registerModule(moduleName, vuexI18nModule, { preserveState: config.preserveState });\n\n    // check if the plugin was correctly initialized\n    if (store.state.hasOwnProperty(moduleName) === false) {\n      console.error('vuex-i18n: i18n vuex module is not correctly initialized. Please check the module name:', moduleName);\n\n      // always return the key if the vuex-i18n module is not initialized correctly\n      Vue.prototype.$i18n = function i18n(key: string) {\n        return key;\n      };\n\n      // do not return any language\n      Vue.prototype.$getLanguage = function getLanguage() {\n        return null;\n      };\n\n      // show a warning if trying to set the language\n      Vue.prototype.$setLanguage = function setLanguage() {\n        console.error('vuex-i18n: i18n vuex module is not correctly initialized');\n      };\n\n      return;\n    }\n\n    // initialize the replacement function\n    const render = renderFn(identifiers, config.warnings);\n\n    // get localized string from store. note that we pass the arguments passed\n    // to the function directly to the translateInLanguage function\n    const translate = function $t() {\n      // get the current language from the store\n      const { locale } = store.state[moduleName];\n\n      return translateInLanguage(locale, ...arguments);\n    };\n\n    // get localized string from store in a given language if available.\n    // there are two possible signatures for the function.\n    // we will check the arguments to make up the options passed.\n    // 1: locale, key, options, pluralization\n    // 2: locale, key, defaultValue, options, pluralization\n    let translateInLanguage = function translateInLanguage(\n      locale: string, _key?: string, _args?: any[],\n    ) {\n      // read the function arguments\n      const args = arguments;\n\n      // initialize options\n      let key = '';\n      let defaultValue = '';\n      let translateOptions = {};\n      let pluralization = null;\n\n      const count = args.length;\n\n      // check if a default value was specified and fill options accordingly\n      if (count >= 3 && typeof args[2] === 'string') {\n        key = args[1];\n        defaultValue = args[2];\n\n        if (count > 3) {\n          translateOptions = args[3];\n        }\n\n        if (count > 4) {\n          pluralization = args[4];\n        }\n      } else {\n        key = args[1];\n\n        // default value was not specified and is therefore the same as the key\n        defaultValue = key;\n\n        if (count > 2) {\n          translateOptions = args[2];\n        }\n\n        if (count > 3) {\n          pluralization = args[3];\n        }\n      }\n\n      // return the default value if the locale is not set (could happen on initialization)\n      if (!locale) {\n        if (config.warnings) console.warn('i18n: i18n locale is not set when trying to access translations:', key);\n        return defaultValue;\n      }\n\n      // get the translations from the store\n      const { translations } = store.state[moduleName];\n\n      // get the last resort fallback from the store\n      const { fallback } = store.state[moduleName];\n\n      // split locale by - to support partial fallback for regional locales\n      // like de-CH, en-UK\n      const localeRegional = locale.split('-');\n\n      // flag for translation to exist or not\n      let translationExists = true;\n\n      // check if the language exists in the store. return the key if not\n      if (translations.hasOwnProperty(locale) === false) {\n        translationExists = false;\n\n        // check if the key exists in the store. return the key if not\n      } else if (translations[locale].hasOwnProperty(key) === false) {\n        translationExists = false;\n      }\n\n      // return the value from the store\n      if (translationExists === true) {\n        return render(locale, translations[locale][key], translateOptions, pluralization);\n      }\n\n      // check if a regional locale translation would be available for the key\n      // i.e. de for de-CH\n      if (localeRegional.length > 1\n        && translations.hasOwnProperty(localeRegional[0]) === true\n        && translations[localeRegional[0]].hasOwnProperty(key) === true) {\n        return render(\n          localeRegional[0], translations[localeRegional[0]][key],\n          translateOptions, pluralization,\n        );\n      }\n\n      // invoke a method if a translation is not found\n      const asyncTranslation = config.onTranslationNotFound(locale, key, defaultValue);\n\n      // resolve async translations by updating the store\n      if (asyncTranslation) {\n        Promise.resolve(asyncTranslation).then((value) => {\n          const additionalTranslations: { [index: string]: any } = {};\n          additionalTranslations[key] = value;\n          addLocale(locale, additionalTranslations);\n        });\n      }\n\n      // check if a valid fallback exists in the store.\n      // return the default value if not\n      if (translations.hasOwnProperty(fallback) === false) {\n        return render(locale, defaultValue, translateOptions, pluralization);\n      }\n\n      // check if the key exists in the fallback locale in the store.\n      // return the default value if not\n      if (translations[fallback].hasOwnProperty(key) === false) {\n        return render(fallback, defaultValue, translateOptions, pluralization);\n      }\n\n      return render(locale, translations[fallback][key], translateOptions, pluralization);\n    };\n\n    // add a filter function to translate in a given locale\n    // (i.e. {{ 'something' | translateIn('en') }})\n    const translateInLanguageFilter = function translateInLanguageFilter(\n      key: string, locale: string, ...args: any[]\n    ) {\n      return translateInLanguage(locale, key, ...args);\n    };\n\n    // check if the given key exists in the current locale\n    const checkKeyExists = function checkKeyExists(\n      key: string, scope: string = 'fallback',\n    ) {\n      // get the current language from the store\n      const { locale } = store.state[moduleName];\n      const { fallback } = store.state[moduleName];\n      const { translations } = store.state[moduleName];\n\n      // check the current translation\n      if (translations.hasOwnProperty(locale) && translations[locale].hasOwnProperty(key)) {\n        return true;\n      }\n\n      if (scope === 'strict') {\n        return false;\n      }\n\n      // check any localized translations\n      const localeRegional = locale.split('-');\n\n      if (localeRegional.length > 1\n        && translations.hasOwnProperty(localeRegional[0])\n        && translations[localeRegional[0]].hasOwnProperty(key)) {\n        return true;\n      }\n\n      if (scope === 'locale') {\n        return false;\n      }\n\n      // check if a fallback locale exists\n      if (translations.hasOwnProperty(fallback) && translations[fallback].hasOwnProperty(key)) {\n        return true;\n      }\n\n      // key does not exist in the store\n      return false;\n    };\n\n    // set fallback locale\n    const setFallbackLocale = function setFallbackLocale(locale: string) {\n      store.dispatch({\n        type: `${moduleName}/setFallbackLocale`,\n        locale,\n      });\n    };\n\n    // set the current locale\n    const setLocale = function setLocale(locale: string) {\n      store.dispatch({\n        type: `${moduleName}/setLocale`,\n        locale,\n      });\n    };\n\n    // get the current locale\n    const getLocale = function getLocale(): string {\n      return store.state[moduleName].locale;\n    };\n\n    // get all available locales\n    const getLocales = function getLocales(): string[] {\n      return Object.keys(store.state[moduleName].translations);\n    };\n\n    // add predefined translations to the store (keeping existing information)\n    let addLocale = function addLocale(locale: string, translations: object) {\n      return store.dispatch({\n        type: `${moduleName}/addLocale`,\n        locale,\n        translations,\n      });\n    };\n\n    // replace all locale information in the store\n    const replaceLocale = function replaceLocale(locale: string, translations: object) {\n      return store.dispatch({\n        type: `${moduleName}/replaceLocale`,\n        locale,\n        translations,\n      });\n    };\n\n    // remove the givne locale from the store\n    const removeLocale = function removeLocale(locale: string) {\n      if (store.state[moduleName].translations.hasOwnProperty(locale)) {\n        store.dispatch({\n          type: `${moduleName}/removeLocale`,\n          locale,\n        });\n      }\n    };\n\n    // we are phasing out the exists function\n    const phaseOutExistsFn = function phaseOutExistsFn(locale: string) {\n      if (config.warnings) console.warn('i18n: $i18n.exists is depreceated. Please use $i18n.localeExists instead. It provides exactly the same functionality.');\n      return checkLocaleExists(locale);\n    };\n\n    // check if the given locale is already loaded\n    let checkLocaleExists = function checkLocaleExists(locale: string): boolean {\n      return store.state[moduleName].translations.hasOwnProperty(locale);\n    };\n\n    // reset the translations for the given locale\n    const reset = function reset(locale?: string) {\n      store.dispatch({\n        type: `${moduleName}/reset`,\n        locale,\n      });\n    };\n\n    // define the i18n methods to be made available\n    const i18n: types.i18nMethods = {\n      locale: getLocale,\n      locales: getLocales,\n      set: setLocale,\n      add: addLocale,\n      replace: replaceLocale,\n      remove: removeLocale,\n      fallback: setFallbackLocale,\n      localeExists: checkLocaleExists,\n      keyExists: checkKeyExists,\n      translate,\n      translateIn: translateInLanguage,\n      reset,\n    };\n\n    // register  i18n methods on the prototype and the global vue instance\n    Vue.prototype.$i18n = i18n;\n    Vue.i18n = i18n;\n\n    // register the translation function on the vue instance directly\n    Vue.prototype.$t = translate;\n\n    // register the specific language translation function on the vue instance directly\n    Vue.prototype.$tlang = translateInLanguage;\n\n    // register a filter function for translations\n    Vue.filter(translateFilterName, translate);\n    Vue.filter(translateInFilterName, translateInLanguageFilter);\n  },\n\n};\n\n// renderFn will initialize a function to render the variable substitutions in\n// the translation string. identifiers specify the tags will be used to find\n// variable substitutions, i.e. {test} or {{test}}, note that we are using a\n// closure to avoid recompilation of the regular expression to match tags on\n// every render cycle.\nlet renderFn = function renderFn(identifiers: string[], warnings: boolean = true) {\n  if (identifiers === null || identifiers.length !== 2) {\n    console.warn('vuex-i18n: You must specify the start and end character identifying variable substitutions');\n  }\n\n  // construct a regular expression ot find variable substitutions, i.e. {test}\n  const matcher = new RegExp(`${identifiers[0]}{1}(\\\\w{1}|\\\\w.+?)${identifiers[1]}{1}`, 'g');\n\n  // define the replacement function\n  const replace = function replace(translation: string, replacements: { [index: string]: any }) {\n    // check if the object has a replace property\n    if (!translation.replace) {\n      return translation;\n    }\n\n    return translation.replace(matcher, (placeholder) => {\n      // remove the identifiers (can be set on the module level)\n      const key = placeholder.replace(identifiers[0], '').replace(identifiers[1], '');\n\n      if (replacements[key] !== undefined) {\n        return replacements[key];\n      }\n\n      // warn user that the placeholder has not been found\n      if (warnings) {\n        if (console.group) {\n          console.group('vuex-i18n: Not all placeholders found');\n        } else {\n          console.warn('vuex-i18n: Not all placeholders found');\n        }\n        console.warn('Text:', translation);\n        console.warn('Placeholder:', placeholder);\n        if (console.groupEnd) {\n          console.groupEnd();\n        }\n      }\n\n      // return the original placeholder\n      return placeholder;\n    });\n  };\n\n  // the render function will replace variable substitutions and prepare the\n  // translations for rendering\n  const render = function render(\n    locale: string, translation: string | string[],\n    replacements: { [index: string]: any } = {},\n    pluralization: number | null = null,\n  ) {\n    // get the type of the property\n    const objType = typeof translation;\n    const pluralizationType = typeof pluralization;\n\n    const resolvedPlaceholders = (function resolve() {\n      if (isArray(translation) && translation instanceof Array) {\n        // replace the placeholder elements in all sub-items\n        return <string[]>translation.map((item: any) => replace(item, replacements));\n      }\n      return replace(<string>translation, replacements);\n    }());\n\n    // return translation item directly\n    if (pluralization === null) {\n      return resolvedPlaceholders;\n    }\n\n    // check if pluralization value is countable\n    if (pluralizationType !== 'number') {\n      if (warnings) console.warn('i18n: pluralization is not a number');\n      return resolvedPlaceholders;\n    }\n\n    // --- handle pluralizations ---\n\n    // replace all placeholders\n    const resolvedTranslation = resolvedPlaceholders;\n\n    // initialize pluralizations\n    let pluralizations = null;\n\n    // if translations are already an array and have more than one entry,\n    // we will not perform a split operation on :::\n    if (isArray(resolvedTranslation) && resolvedTranslation.length > 0) {\n      pluralizations = resolvedTranslation;\n    } else {\n      // split translation strings by ::: to find create the pluralization array\n      const translationText = resolvedTranslation as string;\n      pluralizations = translationText.split(':::');\n    }\n\n    // determine the pluralization version to use by locale\n    const index = plurals(locale, pluralization);\n\n    // check if the specified index is present in the pluralization\n    if (typeof pluralizations[index] === 'undefined') {\n      if (warnings) {\n        console.warn('i18n: pluralization not provided in locale', translation, locale, index);\n      }\n\n      // return the first element of the pluralization by default\n      return pluralizations[0].trim();\n    }\n\n    // return the requested item from the pluralizations\n    return pluralizations[index].trim();\n  };\n\n  // return the render function to the caller\n  return render;\n};\n\n// check if the given object is an array\nfunction isArray(obj: any) {\n  return !!obj && Array === obj.constructor;\n}\n\nexport default VuexI18nPlugin;\n","// determine which pluralization form should be used\n// for the given language given the respective number of items\nexport default function (languageCode: string, n: number | null): number {\n  // initialize the number of items if not set\n  if (n === undefined || n === null) n = 0;\n\n  switch (languageCode) {\n    case 'ay': // Aymará\n    case 'bo': // Tibetan\n    case 'cgg': // Chiga\n    case 'dz': // Dzongkha\n    case 'fa': // Persian\n    case 'id': // Indonesian\n    case 'ja': // Japanese\n    case 'jbo': // Lojban\n    case 'ka': // Georgian\n    case 'kk': // Kazakh\n    case 'km': // Khmer\n    case 'ko': // Korean\n    case 'ky': // Kyrgyz\n    case 'lo': // Lao\n    case 'ms': // Malay\n    case 'my': // Burmese\n    case 'sah': // Yakut\n    case 'su': // Sundanese\n    case 'th': // Thai\n    case 'tt': // Tatar\n    case 'ug': // Uyghur\n    case 'vi': // Vietnamese\n    case 'wo': // Wolof\n    case 'zh': // Chinese\n      // 1 form\n      return 0;\n    case 'is': // Icelandic\n      // 2 forms\n      return (n % 10 !== 1 || n % 100 === 11) ? 1 : 0;\n    case 'jv': // Javanese\n      // 2 forms\n      return n !== 0 ? 1 : 0;\n    case 'mk': // Macedonian\n      // 2 forms\n      return n === 1 || n % 10 === 1 ? 0 : 1;\n    case 'ach': // Acholi\n    case 'ak': // Akan\n    case 'am': // Amharic\n    case 'arn': // Mapudungun\n    case 'br': // Breton\n    case 'fil': // Filipino\n    case 'fr': // French\n    case 'gun': // Gun\n    case 'ln': // Lingala\n    case 'mfe': // Mauritian Creole\n    case 'mg': // Malagasy\n    case 'mi': // Maori\n    case 'oc': // Occitan\n    case 'pt_BR': // Brazilian Portuguese\n    case 'tg': // Tajik\n    case 'ti': // Tigrinya\n    case 'tr': // Turkish\n    case 'uz': // Uzbek\n    case 'wa': // Walloon\n    /* eslint-disable */\n    /* Disable \"Duplicate case label\" because there are 2 forms of Chinese plurals */\n    case 'zh':  // Chinese\n      /* eslint-enable */\n      // 2 forms\n      return n > 1 ? 1 : 0;\n    case 'lv': // Latvian\n      // 3 forms\n      return (n % 10 === 1 && n % 100 !== 11 ? 0 : n !== 0 ? 1 : 2);\n    case 'lt': // Lithuanian\n      // 3 forms\n      return (n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n    case 'be': // Belarusian\n    case 'bs': // Bosnian\n    case 'hr': // Croatian\n    case 'ru': // Russian\n    case 'sr': // Serbian\n    case 'uk': // Ukrainian\n      // 3 forms\n      return (\n        n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n    case 'mnk': // Mandinka\n      // 3 forms\n      return (n === 0 ? 0 : n === 1 ? 1 : 2);\n    case 'ro': // Romanian\n      // 3 forms\n      return (n === 1 ? 0 : (n === 0 || (n % 100 > 0 && n % 100 < 20)) ? 1 : 2);\n    case 'pl': // Polish\n      // 3 forms\n      return (n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n    case 'cs': // Czech\n    case 'sk': // Slovak\n      // 3 forms\n      return (n === 1) ? 0 : (n >= 2 && n <= 4) ? 1 : 2;\n    case 'csb': // Kashubian\n      // 3 forms\n      return (n === 1) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;\n    case 'sl': // Slovenian\n      // 4 forms\n      return (n % 100 === 1 ? 0 : n % 100 === 2 ? 1 : n % 100 === 3 || n % 100 === 4 ? 2 : 3);\n    case 'mt': // Maltese\n      // 4 forms\n      return (n === 1 ? 0 : n === 0 || (n % 100 > 1 && n % 100 < 11) ? 1 : (n % 100 > 10 && n % 100 < 20) ? 2 : 3);\n    case 'gd': // Scottish Gaelic\n      // 4 forms\n      return (n === 1 || n === 11) ? 0 : (n === 2 || n === 12) ? 1 : (n > 2 && n < 20) ? 2 : 3;\n    case 'cy': // Welsh\n      // 4 forms\n      return (n === 1) ? 0 : (n === 2) ? 1 : (n !== 8 && n !== 11) ? 2 : 3;\n    case 'kw': // Cornish\n      // 4 forms\n      return (n === 1) ? 0 : (n === 2) ? 1 : (n === 3) ? 2 : 3;\n    case 'ga': // Irish\n      // 5 forms\n      return n === 1 ? 0 : n === 2 ? 1 : (n > 2 && n < 7) ? 2 : (n > 6 && n < 11) ? 3 : 4;\n    case 'ar': // Arabic\n      // 6 forms\n      return (n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n    default: // Everything else\n      return n !== 1 ? 1 : 0;\n  }\n}\n","\n// import the vuex module for localization\nimport i18nVuexModule from './store/vuex-i18n-module';\n\n// import the corresponding plugin for vue\nimport VuexI18nPlugin from './vuex-i18n-plugin';\n\n// export store and plugin\nexport const store = i18nVuexModule;\n// const plugin = VuexI18nPlugin;\n\nexport default VuexI18nPlugin;\n"],"names":["mutations","RESET","state","payload","locale","Vue","delete","translations","set","SET_LOCALE","ADD_LOCALE","flattenTranslations","hasOwnProperty","existingTranslations","Object","assign","REPLACE_LOCALE","REMOVE_LOCALE","translationCopy","SET_FALLBACK_LOCALE","fallback","obj","toReturn","i","objType","Array","constructor","count","length","index","console","warn","flatObject","x","i18nVuexModule","namespaced","actions","reset","ctx","commit","type","setLocale","addLocale","replaceLocale","removeLocale","setFallbackLocale","VuexI18nPlugin","install","options","config","warnings","moduleName","identifiers","preserveState","translateFilterName","translateInFilterName","onTranslationNotFound","store","error","registerModule","vuexI18nModule","prototype","$i18n","key","$getLanguage","$setLanguage","render","renderFn","translate","translateInLanguage","arguments","_key","_args","args","defaultValue","translateOptions","pluralization","localeRegional","split","translationExists","asyncTranslation","Promise","resolve","then","value","additionalTranslations","dispatch","i18n","locales","keys","add","replace","remove","localeExists","keyExists","scope","translateIn","$t","$tlang","filter","matcher","RegExp","translation","replacements","placeholder","undefined","group","groupEnd","pluralizationType","resolvedPlaceholders","isArray","map","item","resolvedTranslation","pluralizations","languageCode","n","plurals","trim"],"mappings":"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"}